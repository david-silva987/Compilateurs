
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "ENTER EQU FLOAT FOR IDENTIFIER IF IN INT PRINT RANGE programme : statement   programme : statement ENTER programme  statement : assignation\n\t\t\t\t\t\t| expression expression : INT\n\t\t| FLOAT \n\t\t| IDENTIFIER statement : PRINT expression expression : '(' expression ')'  assignation : IDENTIFIER EQU expression "
    
_lr_action_items = {'PRINT':([0,10,],[5,5,]),'IDENTIFIER':([0,5,9,10,13,],[6,12,12,6,12,]),'INT':([0,5,9,10,13,],[7,7,7,7,7,]),'FLOAT':([0,5,9,10,13,],[8,8,8,8,8,]),'(':([0,5,9,10,13,],[9,9,9,9,9,]),'$end':([1,2,3,4,6,7,8,11,12,15,16,17,],[0,-1,-3,-4,-7,-5,-6,-8,-7,-2,-10,-9,]),'ENTER':([2,3,4,6,7,8,11,12,16,17,],[10,-3,-4,-7,-5,-6,-8,-7,-10,-9,]),'EQU':([6,],[13,]),')':([7,8,12,14,17,],[-5,-6,-7,17,-9,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programme':([0,10,],[1,15,]),'statement':([0,10,],[2,2,]),'assignation':([0,10,],[3,3,]),'expression':([0,5,9,10,13,],[4,11,14,4,16,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programme","S'",1,None,None,None),
  ('programme -> statement','programme',1,'p_programme_statement','parser4.py',11),
  ('programme -> statement ENTER programme','programme',3,'p_programme_recursive','parser4.py',15),
  ('statement -> assignation','statement',1,'p_statement','parser4.py',19),
  ('statement -> expression','statement',1,'p_statement','parser4.py',20),
  ('expression -> INT','expression',1,'p_expression_num_or_var','parser4.py',24),
  ('expression -> FLOAT','expression',1,'p_expression_num_or_var','parser4.py',25),
  ('expression -> IDENTIFIER','expression',1,'p_expression_num_or_var','parser4.py',26),
  ('statement -> PRINT expression','statement',2,'p_statement_print','parser4.py',30),
  ('expression -> ( expression )','expression',3,'p_expression_paren','parser4.py',34),
  ('assignation -> IDENTIFIER EQU expression','assignation',3,'p_assign','parser4.py',38),
]
