
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "COMPARATOR ENTER EQU FLOAT FOR IDENTIFIER IF ILLEGAL IN INT POINTS PRINT RANGE programme : statement   programme : statement ENTER programme  statement : assignation\n\t\t\t\t\t\t| expression expression : INT\n\t\t| FLOAT \n\t\t| IDENTIFIER\n\t\t| COMPARATOR statement : PRINT expression statement : IF expression expression expression POINTSexpression : '(' expression ')'  assignation : IDENTIFIER EQU expression "
    
_lr_action_items = {'PRINT':([0,12,],[5,5,]),'IF':([0,12,],[6,6,]),'IDENTIFIER':([0,5,6,8,9,10,11,12,14,15,16,19,21,],[7,14,14,-5,-6,-8,14,7,-7,14,14,14,-11,]),'INT':([0,5,6,8,9,10,11,12,14,15,16,19,21,],[8,8,8,-5,-6,-8,8,8,-7,8,8,8,-11,]),'FLOAT':([0,5,6,8,9,10,11,12,14,15,16,19,21,],[9,9,9,-5,-6,-8,9,9,-7,9,9,9,-11,]),'COMPARATOR':([0,5,6,8,9,10,11,12,14,15,16,19,21,],[10,10,10,-5,-6,-8,10,10,-7,10,10,10,-11,]),'(':([0,5,6,8,9,10,11,12,14,15,16,19,21,],[11,11,11,-5,-6,-8,11,11,-7,11,11,11,-11,]),'$end':([1,2,3,4,7,8,9,10,13,14,18,20,21,23,],[0,-1,-3,-4,-7,-5,-6,-8,-9,-7,-2,-12,-11,-10,]),'ENTER':([2,3,4,7,8,9,10,13,14,20,21,23,],[12,-3,-4,-7,-5,-6,-8,-9,-7,-12,-11,-10,]),'EQU':([7,],[16,]),')':([8,9,10,14,17,21,],[-5,-6,-8,-7,21,-11,]),'POINTS':([8,9,10,14,21,22,],[-5,-6,-8,-7,-11,23,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programme':([0,12,],[1,18,]),'statement':([0,12,],[2,2,]),'assignation':([0,12,],[3,3,]),'expression':([0,5,6,11,12,15,16,19,],[4,13,15,17,4,19,20,22,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programme","S'",1,None,None,None),
  ('programme -> statement','programme',1,'p_programme_statement','parser4.py',11),
  ('programme -> statement ENTER programme','programme',3,'p_programme_recursive','parser4.py',15),
  ('statement -> assignation','statement',1,'p_statement','parser4.py',19),
  ('statement -> expression','statement',1,'p_statement','parser4.py',20),
  ('expression -> INT','expression',1,'p_expression_num_or_var','parser4.py',24),
  ('expression -> FLOAT','expression',1,'p_expression_num_or_var','parser4.py',25),
  ('expression -> IDENTIFIER','expression',1,'p_expression_num_or_var','parser4.py',26),
  ('expression -> COMPARATOR','expression',1,'p_expression_num_or_var','parser4.py',27),
  ('statement -> PRINT expression','statement',2,'p_statement_print','parser4.py',31),
  ('statement -> IF expression expression expression POINTS','statement',5,'p_statement_if','parser4.py',35),
  ('expression -> ( expression )','expression',3,'p_expression_paren','parser4.py',39),
  ('assignation -> IDENTIFIER EQU expression','assignation',3,'p_assign','parser4.py',43),
]
